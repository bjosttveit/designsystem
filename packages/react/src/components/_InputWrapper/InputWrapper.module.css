.inputAndLabel {
  align-items: stretch;
  display: inline-flex;
  flex-direction: column;
  width: 100%;
}

.inputWrapper {
  --background: var(--component-input-color-background-default);
  --border-color: var(--component-input-color-border-default);
  --border-radius: var(--interactive_components-border_radius-normal);
  --icon-background: transparent;
  --icon-width: 22px;
  --outline-color: var(--semantic-tab_focus-outline-color);
  --paddingX: 0;
  --paddingY: 0;

  align-items: stretch;
  background: var(--background);
  border-radius: var(--border-radius);
  box-sizing: border-box;
  display: inline-flex;
  min-height: var(--component-input-size-min_height-default);
  position: relative;
}

.inputWrapper.withFocusEffect:focus-within {
  outline: var(--outline-color) solid var(--semantic-tab_focus-outline-width);
  outline-offset: var(--semantic-tab_focus-outline-offset);
}

.inputWrapper.default:hover {
  --border-color: var(--component-input-color-border-hover);
}

.inputWrapper.error {
  --icon-background: var(--component-input-error-color-border-default);
  --border-color: var(--component-input-error-color-border-default);
}

.inputWrapper.disabled {
  --background: repeating-linear-gradient(
    135deg,
    #efefef,
    #efefef 2px,
    #fff 3px,
    #fff 5px
  );

  opacity: var(--opacity-disabled);
}

.inputWrapper.readonlyInfo {
  --background: var(--component-input-read_only_info-color-background-default);
  --border-color: var(--component-input-read_only_info-color-border-default);
}

.inputWrapper.readonlyConfirm {
  --background: var(
    --component-input-read_only_confirm-color-background-default
  );
  --border-color: var(--component-input-read_only_confirm-color-border-default);
}

.inputWrapper.search {
  flex-direction: row-reverse;
}

.inputWrapper.withPadding {
  /* Subtract size of border on padding-y, because border is on outer element. Without this, height of entire component will be too big */
  --paddingY: calc(
    var(--component-input-space-padding-y) -
      var(--component-input-border_width-default)
  );
  --paddingX: var(--component-input-space-padding-x);
}

.field {
  border-color: var(--border-color);
  border-radius: var(--border-radius);
  border-style: solid;
  border-width: var(--component-input-border_width-default);
  background: var(--background);
  box-sizing: border-box;
  font-family: var(--font_family-default);
  font-size: var(--component-input-font_size-sm);
  outline: none;
  padding: var(--paddingY) var(--paddingX);
  width: 100%;
}

.inputAndLabel.withIcon .field {
  padding-left: calc(var(--paddingX) + var(--icon-width));
}

.label {
  font-weight: var(--component-label-font_weight-default);
  padding: 0;
}
